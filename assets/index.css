@import "./Inter/Inter Web/inter.css";

:root {
    /*
    * Light theme
    */
    --theme-light-color-bg: white;
    --theme-light-color-fg: hsl(230, 6%, 20%);
    --theme-light-color-fg-muted: hsla(230, 6%, 20%, 0.82);
    --theme-light-color-fg-inactive: hsla(230, 6%, 20%, 0.5);
    --theme-light-color-fg-link: hsl(43, 74%, 36%);
    --theme-light-color-fg-link-border: hsla(43, 74%, 86%, 0.6);

    /*
    * Dark theme
    */
    --theme-dark-color-bg: #272625;
    --theme-dark-color-fg: hsl(70, 30%, 85%);
    --theme-dark-color-fg-muted: #b1b894;
    --theme-dark-color-fg-inactive: hsla(70, 30%, 85%, 0.5);
    --theme-dark-color-fg-link: hsl(61, 73%, 71%);
    --theme-dark-color-fg-link-border: hsla(61, 73%, 71%, 0.6);

    /*
     * Use Light theme as default
     */
    --color-bg: var(--theme-light-color-bg);
    --color-fg: var(--theme-light-color-fg);
    --color-fg-muted: var(--theme-light-color-fg-muted);
    --color-fg-inactive: var(--theme-light-color-fg-inactive);
    --color-fg-link: var(--theme-light-color-fg-link);
    --color-fg-link-border: var(--theme-light-color-fg-link-border);
}

/*
 * Use Dark theme
 */

@media (prefers-color-scheme: dark) {
    :root:not([data-theme="light"]) {
        --color-bg: var(--theme-dark-color-bg);
        --color-fg: var(--theme-dark-color-fg);
        --color-fg-muted: var(--theme-dark-color-fg-muted);
        --color-fg-inactive: var(--theme-dark-color-fg-inactive);
        --color-fg-link: var(--theme-dark-color-fg-link);
        --color-fg-link-border: var(--theme-dark-color-fg-link-border);
    }
}

:root[data-theme="dark"] {
    --color-bg: var(--theme-dark-color-bg);
    --color-fg: var(--theme-dark-color-fg);
    --color-fg-muted: var(--theme-dark-color-fg-muted);
    --color-fg-inactive: var(--theme-dark-color-fg-inactive);
    --color-fg-link: var(--theme-dark-color-fg-link);
    --color-fg-link-border: var(--theme-dark-color-fg-link-border);
}

/*
 * Vars
 */

:root {
    --unit: 0.5rem;
    --unit-fluid: clamp(var(--unit), 0.5vw, 1rem);
}

/*
 * Base
 */

html {
    box-sizing: border-box;
}

* {
    box-sizing: inherit;
}

body {
    margin: 0;
    padding: 0 3rem;

    height: 100vh;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: auto 1fr auto;
    grid-template-areas:
        "header"
        "main"
        "footer";

    background-color: var(--color-bg);
    color: var(--color-fg);
}

* {
    transition: color 0.2s linear, background-color 0.2s linear,
        filter 0.2s linear;
}

@media (max-width: 30rem) {
    body {
        padding: 0 2rem;
    }
}

header {
    grid-area: header;
}

main {
    grid-area: main;
}

footer {
    grid-area: footer;
}

img,
svg {
    max-width: 100%;
    height: auto;
}

body.grid {
    background-image: linear-gradient(
            to bottom,
            rgba(0, 0, 0, 0.2) 1px,
            transparent 1px
        ),
        linear-gradient(to right, rgba(0, 0, 0, 0.2) 1px, transparent 1px),
        linear-gradient(to bottom, rgba(0, 0, 0, 0.2) 1px, transparent 1px),
        linear-gradient(to right, rgba(0, 0, 0, 0.2) 1px, transparent 1px);
    background-position: 0 -0.5px;
    background-size: calc(var(--unit-fluid) * 1) calc(var(--unit) * 1),
        calc(var(--unit-fluid) * 1) calc(var(--unit) * 1),
        calc(var(--unit-fluid) * 8) calc(var(--unit) * 6),
        calc(var(--unit-fluid) * 6) calc(var(--unit) * 6);
}

/*
 * Typography
 */

html {
    font-family: "Inter", sans-serif;
}
@supports (font-variation-settings: normal) {
    html {
        font-family: "Inter var", sans-serif;
    }
}

p {
    margin: 0 0 0.5em 0;
    padding: 0;
}

/*
 * Links
 */

a {
    color: var(--color-fg-link);
}

a:hover {
    filter: brightness(120%) saturate(80%);
}

/*
 * Header
 */

header {
    margin: 0 0 1.88rem 0;
}

header h1 {
    margin: 0;
    padding: 2.88rem 0 0 0;
    width: 12rem;
}

header .link-twitter {
    display: inline-block;
    width: 5rem;
}

header svg {
    fill: currentColor;
}

/*
 * Introduction
 */

.introduction {
    margin: 0;
    padding: 0;
    max-width: 48rem;
}

.introduction p {
    font-size: 1.5rem;
    line-height: 2rem;
    font-variation-settings: "wght" 250;
}

/*
 * Footer
 */

footer {
    width: 100%;
    padding: 1rem 0;
    display: grid;
    grid-template-rows: auto;
    grid-template-columns: auto 1fr auto;
    grid-template-areas: "first second third";

    font-size: 0.75rem;
    line-height: 1rem;
}

@media (max-width: 40rem) {
    footer {
        grid-template-areas:
            "first second"
            "third third";
        grid-template-rows: auto auto;
        grid-template-columns: 1fr 1fr;
        display: block;
        text-align: center;
    }
}

footer p {
    grid-area: first;
    margin-right: 1ch;
}

footer ul {
    grid-area: second;
    margin: 0;
    padding: 0;
    list-style: none;
}

footer ul > li {
    display: inline;
}

footer ul > li:not(:last-child):after {
    content: ",";
}

@media (max-width: 40rem) {
    footer ul {
        margin-bottom: 1.5rem;
    }
}

footer .theme-switch {
    grid-area: third;
}

/*
 * Theme switch
 */

.theme-switch {
    display: inline-block;
    position: relative;
    width: 6rem;
    height: 2rem;

    transform: translateY(-0.375rem);
}

.theme-switch svg {
    fill: currentColor;
}

.theme-switch input {
    clip: rect(1px, 1px, 1px, 1px);
    clip-path: inset(50%);
    height: 1px;
    width: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
}

.theme-switch label {
    position: absolute;
    padding: 0.5rem 0.5rem;
    color: var(--color-fg-inactive);
    transition: color 0.3s ease;
    font-size: 1px;
    line-height: 1px;
}

.theme-switch label svg {
    width: 1rem;
    height: auto;
}

.theme-switch label[for="input-theme-light"] {
    left: 0;
    padding-right: 1.5rem;
}

.theme-switch label[for="input-theme-dark"] {
    right: 0;
    padding-left: 1.5rem;
}

.theme-switch label[for="input-theme-light"]::before,
.theme-switch label[for="input-theme-dark"]::before {
    position: absolute;
    top: 0.625rem;

    content: "";
    display: block;
    width: 0.75rem;
    height: 0.75rem;

    background-color: var(--color-fg-muted);
}

.theme-switch label[for="input-theme-light"]::before {
    right: 0;
    border-top-left-radius: 0.375rem;
    border-bottom-left-radius: 0.375rem;
}

.theme-switch label[for="input-theme-dark"]::before {
    left: 0;
    border-top-right-radius: 0.375rem;
    border-bottom-right-radius: 0.375rem;
}

.theme-switch label[for="input-theme-dark"]::after {
    position: absolute;
    top: 0.75rem;
    right: 1.625rem;
    content: "";
    display: block;
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 0.5rem;
    background-color: var(--color-bg);
    transition: transform 0.5s ease-out;
    transform: translateX(-1.5rem);
}

.theme-switch
    input[id="input-theme-dark"]:checked
    ~ label[for="input-theme-dark"]::after {
    transform: translateX(-0.75rem);
}

.theme-switch
    input[id="input-theme-dark"]:not(:checked)
    ~ label[for="input-theme-light"] {
    color: var(--color-fg);
}

.theme-switch
    input[id="input-theme-dark"]:checked
    ~ label[for="input-theme-dark"] {
    color: var(--color-fg);
}

@media (prefers-color-scheme: dark) {
    .theme-switch
        input[id="input-theme-light"]:not(:checked)
        ~ label[for="input-theme-dark"]::after {
        transform: translateX(-0.75rem);
    }

    .theme-switch
        input[id="input-theme-light"]:not(:checked)
        ~ label[for="input-theme-dark"] {
        color: var(--color-fg);
    }

    .theme-switch
        input[id="input-theme-light"]:not(:checked)
        ~ label[for="input-theme-light"] {
        color: var(--color-fg-inactive);
    }

    .theme-switch
        input[id="input-theme-light"]:checked
        ~ label[for="input-theme-light"] {
        color: var(--color-fg);
    }
}

/*
 * Helpers
 */

.screen-reader-only {
    clip: rect(1px, 1px, 1px, 1px);
    clip-path: inset(50%);
    height: 1px;
    width: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
}
